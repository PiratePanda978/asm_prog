.MODEL SMALL
.STACK 100H

;DATA SEGMENT
.DATA
ARR DB 7,9,34,45,66
MSG1 DB 'The sum of odd elements of array is : $'
MSG2 DB 'The average of odd elements of array is : $'
MSG3 DB 'Remainder : $'
MSG4 DB 'THE VALUE STORED IN 2000H IS : $'
SUM DW 0
SUM1 DW 0

;CODE SEGMENT
.CODE
MAIN PROC
MOV AX,@DATA
MOV DS,AX

;LOAD ARRAY
LEA SI,ARR
MOV CL,0
MOV BL,2

;COMPUTE SUM OF ODD ELEMENTS IN ARRAY
LOOP1:
CMP CL,5
JGE ENDLOOP
MOV AL,[SI]
DIV BL  
CMP AH,0
JNE ODD1
INC SI
INC CL
JMP LOOP1
ODD1:
PUSH BX
MOV BL,[SI]
ADD [SUM],BX
INC SI
INC CL
ADD [SUM1],01H
POP BX
JMP LOOP1

;PRINT SUM OF ODD ELEMENTS OF ARRAY
ENDLOOP:
LEA DX,MSG1
MOV AH,9
INT 21H
MOV AX,[SUM]
AAM
ADD AX,3030H
MOV DL,AH
MOV DH,AL
MOV AH,2
INT 21H
MOV DL,DH
INT 21H

;LINEBREAK
CALL NEWLINE

;COMPUTE AVERAGE(QUOTIENT AND REMAINDER) OF ODD ELEMENTS
LEA DX,MSG2
MOV AH,9
INT 21H
XOR BX,BX
XOR DX,DX
XOR AX,AX
MOV BX,[SUM1]
MOV AX,[SUM]
DIV BX

;STORE QUOTIENT IN 2000H MEMORY LOCATION
MOV SI,2000H
MOV [SI],AX

;PRINT QUOTIENT
AAM
PUSH DX
MOV DX,AX
ADD DH,48
ADD DL,48
MOV AH,2
MOV BL,DL
MOV DL,DH
INT 21H
MOV DL,BL
INT 21H
POP DX

;LINEBREAK
CALL NEWLINE

;PRINT REMAINDER
PUSH DX
LEA DX,MSG3
MOV AH,9
INT 21H
POP DX
MOV AX,DX
AAM
MOV DX,AX
ADD DH,48
ADD DL,48
MOV AH,2
MOV BL,DL
MOV DL,DH
INT 21H
MOV DL,BL
INT 21H

;LINEBREAK
CALL NEWLINE

;PRINT VALUE STORED IN 2000H MEMORY LOCATION
LEA DX,MSG4
MOV AH,9
INT 21H
MOV AX,[SI]
AAM
MOV DX,AX
ADD DH,48
ADD DL,48
MOV AH,2
MOV BL,DL
MOV DL,DH
INT 21H
MOV DL,BL
INT 21H

;END PROGRAM
MOV AH,4CH
INT 21H
MAIN ENDP

;LINEBREAK PROCEDURE
NEWLINE PROC
PUSH AX
PUSH DX
MOV AH,2
MOV DL,10
INT 21H
MOV DL,13
INT 21H
POP DX
POP AX
RET
NEWLINE ENDP

END MAIN